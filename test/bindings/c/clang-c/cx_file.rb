# This file was generated by ruby-bindgen. Please do not edit by hand.
require 'ffi'

FFI::DynamicLibrary::SEARCH_PATH = ["c:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/Llvm/x64/bin"]

module CXFile
  extend FFI::Library

  def self.library_names
    ["clang"]
  end

  def self.library_versions
    []
  end

  def self.search_names
    result = Array.new
    self.library_names.each do |name|
      result << "lib#{name}"
      self.library_versions.each do |version|
        case RbConfig::CONFIG['host_os']
          when /mswin|msys|mingw|cygwin|bccwin|wince|emc/
            result << "lib#{name}-#{version}"
            result << "lib#{name}_#{version}"
          when /darwin|mac os/
            result << "lib#{name}.#{version}"
          else
            result << "lib#{name}.so.#{version}"
        end
      end
    end
    result
  end

  ffi_lib self.search_names

  
  class CXString < FFI::Struct
    layout :data, :pointer,
      :private_flags, :uint
  end
  
  class CXStringSet < FFI::Struct
    layout :strings, CXString.ptr,
      :count, :uint
  end
  
  attach_function :clang_get_c_string, :clang_getCString, [cx_string.by_value], :string
  attach_function :clang_dispose_string, :clang_disposeString, [cx_string.by_value], :void
  attach_function :clang_dispose_string_set, :clang_disposeStringSet, [CXStringSet.by_ref], :void
  typedef :pointer, :cx_file
  attach_function :clang_get_file_name, :clang_getFileName, [:pointer], cx_string.by_value
  attach_function :clang_get_file_time, :clang_getFileTime, [:pointer], :long_long
  
  class CXFileUniqueID < FFI::Struct
    layout :data, [:ulong_long, 3]
  end
  
  attach_function :clang_get_file_unique_id, :clang_getFileUniqueID, [:pointer, CXFileUniqueID.by_ref], :int
  attach_function :clang_file_is_equal, :clang_File_isEqual, [:pointer, :pointer], :int
  attach_function :clang_file_try_get_real_path_name, :clang_File_tryGetRealPathName, [:pointer], cx_string.by_value
end
