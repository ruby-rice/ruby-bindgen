# This file was generated by ruby-bindgen. Please do not edit by hand.
require 'ffi'

FFI::DynamicLibrary::SEARCH_PATH = ["c:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/Llvm/x64/bin"]

module Proj
  extend FFI::Library

  def self.library_names
    ["proj"]
  end

  def self.library_versions
    []
  end

  def self.search_names
    result = Array.new
    self.library_names.each do |name|
      result << "lib#{name}"
      self.library_versions.each do |version|
        case RbConfig::CONFIG['host_os']
          when /mswin|msys|mingw|cygwin|bccwin|wince|emc/
            result << "lib#{name}-#{version}"
            result << "lib#{name}_#{version}"
          when /darwin|mac os/
            result << "lib#{name}.#{version}"
          else
            result << "lib#{name}.so.#{version}"
        end
      end
    end
    result
  end

  ffi_lib self.search_names

  attach_variable :PjRelease, :pj_release, :string

  class PJ_AREA < FFI::Struct
  end

  class P5_FACTORS < FFI::Struct
    layout :meridional_scale, :double,
           :parallel_scale, :double,
           :areal_scale, :double,
           :angular_distortion, :double,
           :meridian_parallel_angle, :double,
           :meridian_convergence, :double,
           :tissot_semimajor, :double,
           :tissot_semiminor, :double,
           :dx_dlam, :double,
           :dx_dphi, :double,
           :dy_dlam, :double,
           :dy_dphi, :double
  end

  class PJconsts < FFI::Struct
  end

  callback :PJ_LIST_proj_callback, [:pointer], PJconsts.by_ref

  class PJ_LIST < FFI::Struct
    layout :id, :string,
           :proj, :PJ_LIST_proj_callback,
           :descr, :pointer
  end

  class PJ_ELLPS < FFI::Struct
    layout :id, :string,
           :major, :string,
           :ell, :string,
           :name, :string
  end

  class PJ_UNITS < FFI::Struct
    layout :id, :string,
           :to_meter, :string,
           :name, :string,
           :factor, :double
  end

  class PJ_PRIME_MERIDIANS < FFI::Struct
    layout :id, :string,
           :defn, :string
  end

  class PJ_XYZT < FFI::Struct
    layout :x, :double,
           :y, :double,
           :z, :double,
           :t, :double
  end

  class PJ_UVWT < FFI::Struct
    layout :u, :double,
           :v, :double,
           :w, :double,
           :t, :double
  end

  class PJ_LPZT < FFI::Struct
    layout :lam, :double,
           :phi, :double,
           :z, :double,
           :t, :double
  end

  class PJ_OPK < FFI::Struct
    layout :o, :double,
           :p, :double,
           :k, :double
  end

  class PJ_ENU < FFI::Struct
    layout :e, :double,
           :n, :double,
           :u, :double
  end

  class PJ_GEOD < FFI::Struct
    layout :s, :double,
           :a1, :double,
           :a2, :double
  end

  class PJ_UV < FFI::Struct
    layout :u, :double,
           :v, :double
  end

  class PJ_XY < FFI::Struct
    layout :x, :double,
           :y, :double
  end

  class PJ_LP < FFI::Struct
    layout :lam, :double,
           :phi, :double
  end

  class PJ_XYZ < FFI::Struct
    layout :x, :double,
           :y, :double,
           :z, :double
  end

  class PJ_UVW < FFI::Struct
    layout :u, :double,
           :v, :double,
           :w, :double
  end

  class PJ_LPZ < FFI::Struct
    layout :lam, :double,
           :phi, :double,
           :z, :double
  end

  class PJ_COORD < FFI::Union
    layout :v, [:double, 4],
           :xyzt, PJ_XYZT,
           :uvwt, PJ_UVWT,
           :lpzt, PJ_LPZT,
           :geod, PJ_GEOD,
           :opk, PJ_OPK,
           :enu, PJ_ENU,
           :xyz, PJ_XYZ,
           :uvw, PJ_UVW,
           :lpz, PJ_LPZ,
           :xy, PJ_XY,
           :uv, PJ_UV,
           :lp, PJ_LP
  end

  class PJ_INFO < FFI::Struct
    layout :major, :int,
           :minor, :int,
           :patch, :int,
           :release, :string,
           :version, :string,
           :searchpath, :string,
           :paths, :pointer,
           :path_count, :ulong_long
  end

  class PJ_PROJ_INFO < FFI::Struct
    layout :id, :string,
           :description, :string,
           :definition, :string,
           :has_inverse, :int,
           :accuracy, :double
  end

  class PJ_GRID_INFO < FFI::Struct
    layout :gridname, [:char, 32],
           :filename, [:char, 260],
           :format, [:char, 8],
           :lowerleft, PJ_LP,
           :upperright, PJ_LP,
           :n_lon, :int,
           :n_lat, :int,
           :cs_lon, :double,
           :cs_lat, :double
  end

  class PJ_INIT_INFO < FFI::Struct
    layout :name, [:char, 32],
           :filename, [:char, 260],
           :version, [:char, 32],
           :origin, [:char, 32],
           :lastupdate, [:char, 16]
  end

  PJ_LOG_LEVEL = enum(
    :pj_log_none, 0,
    :pj_log_error, 1,
    :pj_log_debug, 2,
    :pj_log_trace, 3,
    :pj_log_tell, 4,
    :pj_log_debug_major, 2,
    :pj_log_debug_minor, 3
  )

  callback :pj_log_function, [], :void

  class PjCtx < FFI::Struct
  end

  attach_function :proj_context_create, :proj_context_create, [], PjCtx.by_ref
  attach_function :proj_context_destroy, :proj_context_destroy, [PjCtx.by_ref], PjCtx.by_ref
  attach_function :proj_context_clone, :proj_context_clone, [PjCtx.by_ref], PjCtx.by_ref
  callback :proj_file_finder, [], :pointer
  attach_function :proj_context_set_file_finder, :proj_context_set_file_finder, [PjCtx.by_ref, :pointer, :pointer], :void
  attach_function :proj_context_set_search_paths, :proj_context_set_search_paths, [PjCtx.by_ref, :int, :pointer], :void
  attach_function :proj_context_set_ca_bundle_path, :proj_context_set_ca_bundle_path, [PjCtx.by_ref, :string], :void
  attach_function :proj_context_use_proj4_init_rules, :proj_context_use_proj4_init_rules, [PjCtx.by_ref, :int], :void
  attach_function :proj_context_get_use_proj4_init_rules, :proj_context_get_use_proj4_init_rules, [PjCtx.by_ref, :int], :int

  class PROJ_FILE_HANDLE < FFI::Struct
  end

  PROJ_OPEN_ACCESS = enum(
    :proj_open_access_read_only, 0,
    :proj_open_access_read_update, 1,
    :proj_open_access_create, 2
  )

  callback :PROJ_FILE_API_open_cbk_callback, [:pointer, :string, PROJ_OPEN_ACCESS, :pointer], PROJ_FILE_HANDLE.by_ref
  callback :PROJ_FILE_API_read_cbk_callback, [:pointer, :pointer, :pointer, :ulong_long, :pointer], :ulong_long
  callback :PROJ_FILE_API_write_cbk_callback, [:pointer, :pointer, :pointer, :ulong_long, :pointer], :ulong_long
  callback :PROJ_FILE_API_seek_cbk_callback, [:pointer, :pointer, :long_long, :int, :pointer], :int
  callback :PROJ_FILE_API_tell_cbk_callback, [:pointer, :pointer, :pointer], :ulong_long
  callback :PROJ_FILE_API_close_cbk_callback, [:pointer, :pointer, :pointer], :void
  callback :PROJ_FILE_API_exists_cbk_callback, [:pointer, :string, :pointer], :int
  callback :PROJ_FILE_API_mkdir_cbk_callback, [:pointer, :string, :pointer], :int
  callback :PROJ_FILE_API_unlink_cbk_callback, [:pointer, :string, :pointer], :int
  callback :PROJ_FILE_API_rename_cbk_callback, [:pointer, :string, :string, :pointer], :int

  class PROJ_FILE_API < FFI::Struct
    layout :version, :int,
           :open_cbk, :PROJ_FILE_API_open_cbk_callback,
           :read_cbk, :PROJ_FILE_API_read_cbk_callback,
           :write_cbk, :PROJ_FILE_API_write_cbk_callback,
           :seek_cbk, :PROJ_FILE_API_seek_cbk_callback,
           :tell_cbk, :PROJ_FILE_API_tell_cbk_callback,
           :close_cbk, :PROJ_FILE_API_close_cbk_callback,
           :exists_cbk, :PROJ_FILE_API_exists_cbk_callback,
           :mkdir_cbk, :PROJ_FILE_API_mkdir_cbk_callback,
           :unlink_cbk, :PROJ_FILE_API_unlink_cbk_callback,
           :rename_cbk, :PROJ_FILE_API_rename_cbk_callback
  end

  attach_function :proj_context_set_fileapi, :proj_context_set_fileapi, [PjCtx.by_ref, PROJ_FILE_API.by_ref, :pointer], :int
  attach_function :proj_context_set_sqlite3_vfs_name, :proj_context_set_sqlite3_vfs_name, [PjCtx.by_ref, :string], :void

  class PROJ_NETWORK_HANDLE < FFI::Struct
  end

  callback :proj_network_open_cbk_type, [], PROJ_NETWORK_HANDLE.by_ref
  callback :proj_network_close_cbk_type, [], :void
  callback :proj_network_get_header_value_cbk_type, [], :pointer
  callback :proj_network_read_range_type, [], :ulong_long
  attach_function :proj_context_set_network_callbacks, :proj_context_set_network_callbacks, [PjCtx.by_ref, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_context_set_enable_network, :proj_context_set_enable_network, [PjCtx.by_ref, :int], :int
  attach_function :proj_context_is_network_enabled, :proj_context_is_network_enabled, [PjCtx.by_ref], :int
  attach_function :proj_context_set_url_endpoint, :proj_context_set_url_endpoint, [PjCtx.by_ref, :string], :void
  attach_function :proj_context_get_url_endpoint, :proj_context_get_url_endpoint, [PjCtx.by_ref], :string
  attach_function :proj_context_get_user_writable_directory, :proj_context_get_user_writable_directory, [PjCtx.by_ref, :int], :string
  attach_function :proj_grid_cache_set_enable, :proj_grid_cache_set_enable, [PjCtx.by_ref, :int], :void
  attach_function :proj_grid_cache_set_filename, :proj_grid_cache_set_filename, [PjCtx.by_ref, :string], :void
  attach_function :proj_grid_cache_set_max_size, :proj_grid_cache_set_max_size, [PjCtx.by_ref, :int], :void
  attach_function :proj_grid_cache_set_ttl, :proj_grid_cache_set_ttl, [PjCtx.by_ref, :int], :void
  attach_function :proj_grid_cache_clear, :proj_grid_cache_clear, [PjCtx.by_ref], :void
  attach_function :proj_is_download_needed, :proj_is_download_needed, [PjCtx.by_ref, :string, :int], :int
  callback :proj_download_file_progress_cbk_callback, [:pointer, :double, :pointer], :int
  attach_function :proj_download_file, :proj_download_file, [PjCtx.by_ref, :string, :int, :proj_download_file_progress_cbk_callback, :pointer], :int
  attach_function :proj_create, :proj_create, [PjCtx.by_ref, :string], PJconsts.by_ref
  attach_function :proj_create_argv, :proj_create_argv, [PjCtx.by_ref, :int, :pointer], PJconsts.by_ref
  attach_function :proj_create_crs_to_crs, :proj_create_crs_to_crs, [PjCtx.by_ref, :string, :string, PJ_AREA.by_ref], PJconsts.by_ref
  attach_function :proj_create_crs_to_crs_from_pj, :proj_create_crs_to_crs_from_pj, [PjCtx.by_ref, PJconsts.by_ref, PJconsts.by_ref, PJ_AREA.by_ref, :pointer], PJconsts.by_ref
  attach_function :proj_normalize_for_visualization, :proj_normalize_for_visualization, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_assign_context, :proj_assign_context, [PJconsts.by_ref, PjCtx.by_ref], :void
  attach_function :proj_destroy, :proj_destroy, [PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_area_create, :proj_area_create, [], PJ_AREA.by_ref
  attach_function :proj_area_set_bbox, :proj_area_set_bbox, [PJ_AREA.by_ref, :double, :double, :double, :double], :void
  attach_function :proj_area_set_name, :proj_area_set_name, [PJ_AREA.by_ref, :string], :void
  attach_function :proj_area_destroy, :proj_area_destroy, [PJ_AREA.by_ref], :void

  PJ_DIRECTION = enum(
    :pj_fwd, 1,
    :pj_ident, 0,
    :pj_inv, -1
  )

  attach_function :proj_angular_input, :proj_angular_input, [PJconsts.by_ref, PJ_DIRECTION], :int
  attach_function :proj_angular_output, :proj_angular_output, [PJconsts.by_ref, PJ_DIRECTION], :int
  attach_function :proj_degree_input, :proj_degree_input, [PJconsts.by_ref, PJ_DIRECTION], :int
  attach_function :proj_degree_output, :proj_degree_output, [PJconsts.by_ref, PJ_DIRECTION], :int
  attach_function :proj_trans, :proj_trans, [PJconsts.by_ref, PJ_DIRECTION, PJ_COORD.by_value], PJ_COORD.by_value
  attach_function :proj_trans_get_last_used_operation, :proj_trans_get_last_used_operation, [PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_trans_array, :proj_trans_array, [PJconsts.by_ref, PJ_DIRECTION, :ulong_long, PJ_COORD.by_ref], :int
  attach_function :proj_trans_generic, :proj_trans_generic, [PJconsts.by_ref, PJ_DIRECTION, :pointer, :ulong_long, :ulong_long, :pointer, :ulong_long, :ulong_long, :pointer, :ulong_long, :ulong_long, :pointer, :ulong_long, :ulong_long], :ulong_long
  attach_function :proj_trans_bounds, :proj_trans_bounds, [PjCtx.by_ref, PJconsts.by_ref, PJ_DIRECTION, :double, :double, :double, :double, :pointer, :pointer, :pointer, :pointer, :int], :int
  attach_function :proj_coord, :proj_coord, [:double, :double, :double, :double], PJ_COORD.by_value
  attach_function :proj_roundtrip, :proj_roundtrip, [PJconsts.by_ref, PJ_DIRECTION, :int, PJ_COORD.by_ref], :double
  attach_function :proj_lp_dist, :proj_lp_dist, [PJconsts.by_ref, PJ_COORD.by_value, PJ_COORD.by_value], :double
  attach_function :proj_lpz_dist, :proj_lpz_dist, [PJconsts.by_ref, PJ_COORD.by_value, PJ_COORD.by_value], :double
  attach_function :proj_xy_dist, :proj_xy_dist, [PJ_COORD.by_value, PJ_COORD.by_value], :double
  attach_function :proj_xyz_dist, :proj_xyz_dist, [PJ_COORD.by_value, PJ_COORD.by_value], :double
  attach_function :proj_geod, :proj_geod, [PJconsts.by_ref, PJ_COORD.by_value, PJ_COORD.by_value], PJ_COORD.by_value
  attach_function :proj_context_errno, :proj_context_errno, [PjCtx.by_ref], :int
  attach_function :proj_errno, :proj_errno, [PJconsts.by_ref], :int
  attach_function :proj_errno_set, :proj_errno_set, [PJconsts.by_ref, :int], :int
  attach_function :proj_errno_reset, :proj_errno_reset, [PJconsts.by_ref], :int
  attach_function :proj_errno_restore, :proj_errno_restore, [PJconsts.by_ref, :int], :int
  attach_function :proj_errno_string, :proj_errno_string, [:int], :string
  attach_function :proj_context_errno_string, :proj_context_errno_string, [PjCtx.by_ref, :int], :string
  attach_function :proj_log_level, :proj_log_level, [PjCtx.by_ref, PJ_LOG_LEVEL], PJ_LOG_LEVEL
  attach_function :proj_log_func, :proj_log_func, [PjCtx.by_ref, :pointer, :pointer], :void
  attach_function :proj_factors, :proj_factors, [PJconsts.by_ref, PJ_COORD.by_value], P5_FACTORS.by_value
  attach_function :proj_info, :proj_info, [], PJ_INFO.by_value
  attach_function :proj_pj_info, :proj_pj_info, [PJconsts.by_ref], PJ_PROJ_INFO.by_value
  attach_function :proj_grid_info, :proj_grid_info, [:string], PJ_GRID_INFO.by_value
  attach_function :proj_init_info, :proj_init_info, [:string], PJ_INIT_INFO.by_value
  attach_function :proj_list_operations, :proj_list_operations, [], PJ_LIST.by_ref
  attach_function :proj_list_ellps, :proj_list_ellps, [], PJ_ELLPS.by_ref
  attach_function :proj_list_prime_meridians, :proj_list_prime_meridians, [], PJ_PRIME_MERIDIANS.by_ref
  attach_function :proj_torad, :proj_torad, [:double], :double
  attach_function :proj_todeg, :proj_todeg, [:double], :double
  attach_function :proj_dmstor, :proj_dmstor, [:string, :pointer], :double
  attach_function :proj_rtodms2, :proj_rtodms2, [:string, :ulong_long, :double, :int, :int], :string
  attach_function :proj_cleanup, :proj_cleanup, [], :void
  typedef :pointer, :proj_string_list

  PJ_GUESSED_WKT_DIALECT = enum(
    :pj_guessed_wkt2_2019, 0,
    :pj_guessed_wkt2_2018, 0,
    :pj_guessed_wkt2_2015, 1,
    :pj_guessed_wkt1_gdal, 2,
    :pj_guessed_wkt1_esri, 3,
    :pj_guessed_not_wkt, 4
  )

  PJ_CATEGORY = enum(
    :pj_category_ellipsoid, 0,
    :pj_category_prime_meridian, 1,
    :pj_category_datum, 2,
    :pj_category_crs, 3,
    :pj_category_coordinate_operation, 4,
    :pj_category_datum_ensemble, 5
  )

  PJ_TYPE = enum(
    :pj_type_unknown, 0,
    :pj_type_ellipsoid, 1,
    :pj_type_prime_meridian, 2,
    :pj_type_geodetic_reference_frame, 3,
    :pj_type_dynamic_geodetic_reference_frame, 4,
    :pj_type_vertical_reference_frame, 5,
    :pj_type_dynamic_vertical_reference_frame, 6,
    :pj_type_datum_ensemble, 7,
    :pj_type_crs, 8,
    :pj_type_geodetic_crs, 9,
    :pj_type_geocentric_crs, 10,
    :pj_type_geographic_crs, 11,
    :pj_type_geographic_2_d_crs, 12,
    :pj_type_geographic_3_d_crs, 13,
    :pj_type_vertical_crs, 14,
    :pj_type_projected_crs, 15,
    :pj_type_compound_crs, 16,
    :pj_type_temporal_crs, 17,
    :pj_type_engineering_crs, 18,
    :pj_type_bound_crs, 19,
    :pj_type_other_crs, 20,
    :pj_type_conversion, 21,
    :pj_type_transformation, 22,
    :pj_type_concatenated_operation, 23,
    :pj_type_other_coordinate_operation, 24,
    :pj_type_temporal_datum, 25,
    :pj_type_engineering_datum, 26,
    :pj_type_parametric_datum, 27,
    :pj_type_derived_projected_crs, 28,
    :pj_type_coordinate_metadata, 29
  )

  PJ_COMPARISON_CRITERION = enum(
    :pj_comp_strict, 0,
    :pj_comp_equivalent, 1,
    :pj_comp_equivalent_except_axis_order_geogcrs, 2
  )

  PJ_WKT_TYPE = enum(
    :pj_wkt2_2015, 0,
    :pj_wkt2_2015_simplified, 1,
    :pj_wkt2_2019, 2,
    :pj_wkt2_2018, 2,
    :pj_wkt2_2019_simplified, 3,
    :pj_wkt2_2018_simplified, 3,
    :pj_wkt1_gdal, 4,
    :pj_wkt1_esri, 5
  )

  PROJ_CRS_EXTENT_USE = enum(
    :pj_crs_extent_none, 0,
    :pj_crs_extent_both, 1,
    :pj_crs_extent_intersection, 2,
    :pj_crs_extent_smallest, 3
  )

  PROJ_GRID_AVAILABILITY_USE = enum(
    :proj_grid_availability_used_for_sorting, 0,
    :proj_grid_availability_discard_operation_if_missing_grid, 1,
    :proj_grid_availability_ignored, 2,
    :proj_grid_availability_known_available, 3
  )

  PJ_PROJ_STRING_TYPE = enum(
    :pj_proj_5, 0,
    :pj_proj_4, 1
  )

  PROJ_SPATIAL_CRITERION = enum(
    :proj_spatial_criterion_strict_containment, 0,
    :proj_spatial_criterion_partial_intersection, 1
  )

  PROJ_INTERMEDIATE_CRS_USE = enum(
    :proj_intermediate_crs_use_always, 0,
    :proj_intermediate_crs_use_if_no_direct_transformation, 1,
    :proj_intermediate_crs_use_never, 2
  )

  PJ_COORDINATE_SYSTEM_TYPE = enum(
    :pj_cs_type_unknown, 0,
    :pj_cs_type_cartesian, 1,
    :pj_cs_type_ellipsoidal, 2,
    :pj_cs_type_vertical, 3,
    :pj_cs_type_spherical, 4,
    :pj_cs_type_ordinal, 5,
    :pj_cs_type_parametric, 6,
    :pj_cs_type_datetimetemporal, 7,
    :pj_cs_type_temporalcount, 8,
    :pj_cs_type_temporalmeasure, 9
  )

  class PROJ_CRS_INFO < FFI::Struct
    layout :auth_name, :string,
           :code, :string,
           :name, :string,
           :type, PJ_TYPE,
           :deprecated, :int,
           :bbox_valid, :int,
           :west_lon_degree, :double,
           :south_lat_degree, :double,
           :east_lon_degree, :double,
           :north_lat_degree, :double,
           :area_name, :string,
           :projection_method_name, :string,
           :celestial_body_name, :string
  end

  class PROJ_CRS_LIST_PARAMETERS < FFI::Struct
    layout :types, :pointer,
           :types_count, :ulong_long,
           :crs_area_of_use_contains_bbox, :int,
           :bbox_valid, :int,
           :west_lon_degree, :double,
           :south_lat_degree, :double,
           :east_lon_degree, :double,
           :north_lat_degree, :double,
           :allow_deprecated, :int,
           :celestial_body_name, :string
  end

  class PROJ_UNIT_INFO < FFI::Struct
    layout :auth_name, :string,
           :code, :string,
           :name, :string,
           :category, :string,
           :conv_factor, :double,
           :proj_short_name, :string,
           :deprecated, :int
  end

  class PROJ_CELESTIAL_BODY_INFO < FFI::Struct
    layout :auth_name, :string,
           :name, :string
  end

  class PJ_OBJ_LIST < FFI::Struct
  end

  attach_function :proj_string_list_destroy, :proj_string_list_destroy, [:pointer], :void
  attach_function :proj_context_set_autoclose_database, :proj_context_set_autoclose_database, [PjCtx.by_ref, :int], :void
  attach_function :proj_context_set_database_path, :proj_context_set_database_path, [PjCtx.by_ref, :string, :pointer, :pointer], :int
  attach_function :proj_context_get_database_path, :proj_context_get_database_path, [PjCtx.by_ref], :string
  attach_function :proj_context_get_database_metadata, :proj_context_get_database_metadata, [PjCtx.by_ref, :string], :string
  attach_function :proj_context_get_database_structure, :proj_context_get_database_structure, [PjCtx.by_ref, :pointer], :pointer
  attach_function :proj_context_guess_wkt_dialect, :proj_context_guess_wkt_dialect, [PjCtx.by_ref, :string], PJ_GUESSED_WKT_DIALECT
  attach_function :proj_create_from_wkt, :proj_create_from_wkt, [PjCtx.by_ref, :string, :pointer, :pointer, :pointer], PJconsts.by_ref
  attach_function :proj_create_from_database, :proj_create_from_database, [PjCtx.by_ref, :string, :string, PJ_CATEGORY, :int, :pointer], PJconsts.by_ref
  attach_function :proj_uom_get_info_from_database, :proj_uom_get_info_from_database, [PjCtx.by_ref, :string, :string, :pointer, :pointer, :pointer], :int
  attach_function :proj_grid_get_info_from_database, :proj_grid_get_info_from_database, [PjCtx.by_ref, :string, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_clone, :proj_clone, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_create_from_name, :proj_create_from_name, [PjCtx.by_ref, :string, :string, :pointer, :ulong_long, :int, :ulong_long, :pointer], PJ_OBJ_LIST.by_ref
  attach_function :proj_get_type, :proj_get_type, [PJconsts.by_ref], PJ_TYPE
  attach_function :proj_is_deprecated, :proj_is_deprecated, [PJconsts.by_ref], :int
  attach_function :proj_get_non_deprecated, :proj_get_non_deprecated, [PjCtx.by_ref, PJconsts.by_ref], PJ_OBJ_LIST.by_ref
  attach_function :proj_is_equivalent_to, :proj_is_equivalent_to, [PJconsts.by_ref, PJconsts.by_ref, PJ_COMPARISON_CRITERION], :int
  attach_function :proj_is_equivalent_to_with_ctx, :proj_is_equivalent_to_with_ctx, [PjCtx.by_ref, PJconsts.by_ref, PJconsts.by_ref, PJ_COMPARISON_CRITERION], :int
  attach_function :proj_is_crs, :proj_is_crs, [PJconsts.by_ref], :int
  attach_function :proj_get_name, :proj_get_name, [PJconsts.by_ref], :string
  attach_function :proj_get_id_auth_name, :proj_get_id_auth_name, [PJconsts.by_ref, :int], :string
  attach_function :proj_get_id_code, :proj_get_id_code, [PJconsts.by_ref, :int], :string
  attach_function :proj_get_remarks, :proj_get_remarks, [PJconsts.by_ref], :string
  attach_function :proj_get_domain_count, :proj_get_domain_count, [PJconsts.by_ref], :int
  attach_function :proj_get_scope, :proj_get_scope, [PJconsts.by_ref], :string
  attach_function :proj_get_scope_ex, :proj_get_scope_ex, [PJconsts.by_ref, :int], :string
  attach_function :proj_get_area_of_use, :proj_get_area_of_use, [PjCtx.by_ref, PJconsts.by_ref, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_get_area_of_use_ex, :proj_get_area_of_use_ex, [PjCtx.by_ref, PJconsts.by_ref, :int, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_as_wkt, :proj_as_wkt, [PjCtx.by_ref, PJconsts.by_ref, PJ_WKT_TYPE, :pointer], :string
  attach_function :proj_as_proj_string, :proj_as_proj_string, [PjCtx.by_ref, PJconsts.by_ref, PJ_PROJ_STRING_TYPE, :pointer], :string
  attach_function :proj_as_projjson, :proj_as_projjson, [PjCtx.by_ref, PJconsts.by_ref, :pointer], :string
  attach_function :proj_get_source_crs, :proj_get_source_crs, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_get_target_crs, :proj_get_target_crs, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_identify, :proj_identify, [PjCtx.by_ref, PJconsts.by_ref, :string, :pointer, :pointer], PJ_OBJ_LIST.by_ref
  attach_function :proj_get_geoid_models_from_database, :proj_get_geoid_models_from_database, [PjCtx.by_ref, :string, :string, :pointer], :pointer
  attach_function :proj_int_list_destroy, :proj_int_list_destroy, [:pointer], :void
  attach_function :proj_get_authorities_from_database, :proj_get_authorities_from_database, [PjCtx.by_ref], :pointer
  attach_function :proj_get_codes_from_database, :proj_get_codes_from_database, [PjCtx.by_ref, :string, PJ_TYPE, :int], :pointer
  attach_function :proj_get_celestial_body_list_from_database, :proj_get_celestial_body_list_from_database, [PjCtx.by_ref, :string, :pointer], :pointer
  attach_function :proj_celestial_body_list_destroy, :proj_celestial_body_list_destroy, [:pointer], :void
  attach_function :proj_get_crs_list_parameters_create, :proj_get_crs_list_parameters_create, [], PROJ_CRS_LIST_PARAMETERS.by_ref
  attach_function :proj_get_crs_list_parameters_destroy, :proj_get_crs_list_parameters_destroy, [PROJ_CRS_LIST_PARAMETERS.by_ref], :void
  attach_function :proj_get_crs_info_list_from_database, :proj_get_crs_info_list_from_database, [PjCtx.by_ref, :string, PROJ_CRS_LIST_PARAMETERS.by_ref, :pointer], :pointer
  attach_function :proj_crs_info_list_destroy, :proj_crs_info_list_destroy, [:pointer], :void
  attach_function :proj_get_units_from_database, :proj_get_units_from_database, [PjCtx.by_ref, :string, :string, :int, :pointer], :pointer
  attach_function :proj_unit_list_destroy, :proj_unit_list_destroy, [:pointer], :void

  class PJ_INSERT_SESSION < FFI::Struct
  end

  attach_function :proj_insert_object_session_create, :proj_insert_object_session_create, [PjCtx.by_ref], PJ_INSERT_SESSION.by_ref
  attach_function :proj_insert_object_session_destroy, :proj_insert_object_session_destroy, [PjCtx.by_ref, PJ_INSERT_SESSION.by_ref], :void
  attach_function :proj_get_insert_statements, :proj_get_insert_statements, [PjCtx.by_ref, PJ_INSERT_SESSION.by_ref, PJconsts.by_ref, :string, :string, :int, :pointer, :pointer], :pointer
  attach_function :proj_suggests_code_for, :proj_suggests_code_for, [PjCtx.by_ref, PJconsts.by_ref, :string, :int, :pointer], :string
  attach_function :proj_string_destroy, :proj_string_destroy, [:string], :void

  class PJ_OPERATION_FACTORY_CONTEXT < FFI::Struct
  end

  attach_function :proj_create_operation_factory_context, :proj_create_operation_factory_context, [PjCtx.by_ref, :string], PJ_OPERATION_FACTORY_CONTEXT.by_ref
  attach_function :proj_operation_factory_context_destroy, :proj_operation_factory_context_destroy, [PJ_OPERATION_FACTORY_CONTEXT.by_ref], :void
  attach_function :proj_operation_factory_context_set_desired_accuracy, :proj_operation_factory_context_set_desired_accuracy, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :double], :void
  attach_function :proj_operation_factory_context_set_area_of_interest, :proj_operation_factory_context_set_area_of_interest, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :double, :double, :double, :double], :void
  attach_function :proj_operation_factory_context_set_area_of_interest_name, :proj_operation_factory_context_set_area_of_interest_name, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :string], :void
  attach_function :proj_operation_factory_context_set_crs_extent_use, :proj_operation_factory_context_set_crs_extent_use, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, PROJ_CRS_EXTENT_USE], :void
  attach_function :proj_operation_factory_context_set_spatial_criterion, :proj_operation_factory_context_set_spatial_criterion, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, PROJ_SPATIAL_CRITERION], :void
  attach_function :proj_operation_factory_context_set_grid_availability_use, :proj_operation_factory_context_set_grid_availability_use, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, PROJ_GRID_AVAILABILITY_USE], :void
  attach_function :proj_operation_factory_context_set_use_proj_alternative_grid_names, :proj_operation_factory_context_set_use_proj_alternative_grid_names, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :int], :void
  attach_function :proj_operation_factory_context_set_allow_use_intermediate_crs, :proj_operation_factory_context_set_allow_use_intermediate_crs, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, PROJ_INTERMEDIATE_CRS_USE], :void
  attach_function :proj_operation_factory_context_set_allowed_intermediate_crs, :proj_operation_factory_context_set_allowed_intermediate_crs, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :pointer], :void
  attach_function :proj_operation_factory_context_set_discard_superseded, :proj_operation_factory_context_set_discard_superseded, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :int], :void
  attach_function :proj_operation_factory_context_set_allow_ballpark_transformations, :proj_operation_factory_context_set_allow_ballpark_transformations, [PjCtx.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref, :int], :void
  attach_function :proj_create_operations, :proj_create_operations, [PjCtx.by_ref, PJconsts.by_ref, PJconsts.by_ref, PJ_OPERATION_FACTORY_CONTEXT.by_ref], PJ_OBJ_LIST.by_ref
  attach_function :proj_list_get_count, :proj_list_get_count, [PJ_OBJ_LIST.by_ref], :int
  attach_function :proj_list_get, :proj_list_get, [PjCtx.by_ref, PJ_OBJ_LIST.by_ref, :int], PJconsts.by_ref
  attach_function :proj_list_destroy, :proj_list_destroy, [PJ_OBJ_LIST.by_ref], :void
  attach_function :proj_get_suggested_operation, :proj_get_suggested_operation, [PjCtx.by_ref, PJ_OBJ_LIST.by_ref, PJ_DIRECTION, PJ_COORD.by_value], :int
  attach_function :proj_crs_is_derived, :proj_crs_is_derived, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_crs_get_geodetic_crs, :proj_crs_get_geodetic_crs, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_crs_get_horizontal_datum, :proj_crs_get_horizontal_datum, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_crs_get_sub_crs, :proj_crs_get_sub_crs, [PjCtx.by_ref, PJconsts.by_ref, :int], PJconsts.by_ref
  attach_function :proj_crs_get_datum, :proj_crs_get_datum, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_crs_get_datum_ensemble, :proj_crs_get_datum_ensemble, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_crs_get_datum_forced, :proj_crs_get_datum_forced, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_datum_ensemble_get_member_count, :proj_datum_ensemble_get_member_count, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_datum_ensemble_get_accuracy, :proj_datum_ensemble_get_accuracy, [PjCtx.by_ref, PJconsts.by_ref], :double
  attach_function :proj_datum_ensemble_get_member, :proj_datum_ensemble_get_member, [PjCtx.by_ref, PJconsts.by_ref, :int], PJconsts.by_ref
  attach_function :proj_dynamic_datum_get_frame_reference_epoch, :proj_dynamic_datum_get_frame_reference_epoch, [PjCtx.by_ref, PJconsts.by_ref], :double
  attach_function :proj_crs_get_coordinate_system, :proj_crs_get_coordinate_system, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_cs_get_type, :proj_cs_get_type, [PjCtx.by_ref, PJconsts.by_ref], PJ_COORDINATE_SYSTEM_TYPE
  attach_function :proj_cs_get_axis_count, :proj_cs_get_axis_count, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_cs_get_axis_info, :proj_cs_get_axis_info, [PjCtx.by_ref, PJconsts.by_ref, :int, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_get_ellipsoid, :proj_get_ellipsoid, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_ellipsoid_get_parameters, :proj_ellipsoid_get_parameters, [PjCtx.by_ref, PJconsts.by_ref, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_get_celestial_body_name, :proj_get_celestial_body_name, [PjCtx.by_ref, PJconsts.by_ref], :string
  attach_function :proj_get_prime_meridian, :proj_get_prime_meridian, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_prime_meridian_get_parameters, :proj_prime_meridian_get_parameters, [PjCtx.by_ref, PJconsts.by_ref, :pointer, :pointer, :pointer], :int
  attach_function :proj_crs_get_coordoperation, :proj_crs_get_coordoperation, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_coordoperation_get_method_info, :proj_coordoperation_get_method_info, [PjCtx.by_ref, PJconsts.by_ref, :pointer, :pointer, :pointer], :int
  attach_function :proj_coordoperation_is_instantiable, :proj_coordoperation_is_instantiable, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_coordoperation_has_ballpark_transformation, :proj_coordoperation_has_ballpark_transformation, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_coordoperation_get_param_count, :proj_coordoperation_get_param_count, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_coordoperation_get_param_index, :proj_coordoperation_get_param_index, [PjCtx.by_ref, PJconsts.by_ref, :string], :int
  attach_function :proj_coordoperation_get_param, :proj_coordoperation_get_param, [PjCtx.by_ref, PJconsts.by_ref, :int, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_coordoperation_get_grid_used_count, :proj_coordoperation_get_grid_used_count, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_coordoperation_get_grid_used, :proj_coordoperation_get_grid_used, [PjCtx.by_ref, PJconsts.by_ref, :int, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer, :pointer], :int
  attach_function :proj_coordoperation_get_accuracy, :proj_coordoperation_get_accuracy, [PjCtx.by_ref, PJconsts.by_ref], :double
  attach_function :proj_coordoperation_get_towgs84_values, :proj_coordoperation_get_towgs84_values, [PjCtx.by_ref, PJconsts.by_ref, :pointer, :int, :int], :int
  attach_function :proj_coordoperation_create_inverse, :proj_coordoperation_create_inverse, [PjCtx.by_ref, PJconsts.by_ref], PJconsts.by_ref
  attach_function :proj_concatoperation_get_step_count, :proj_concatoperation_get_step_count, [PjCtx.by_ref, PJconsts.by_ref], :int
  attach_function :proj_concatoperation_get_step, :proj_concatoperation_get_step, [PjCtx.by_ref, PJconsts.by_ref, :int], PJconsts.by_ref
  attach_function :proj_coordinate_metadata_get_epoch, :proj_coordinate_metadata_get_epoch, [PjCtx.by_ref, PJconsts.by_ref], :double
end
